В данной программе функция `update` изменяет копию указателя `p`, а не саму переменную `a`, на которую он указывает.
Это происходит из-за того, что в функции `update` переменная `b` является локальной переменной,
и когда вы присваиваете `p = &b`, вы изменяете только локальную копию указателя `p`,
не влияя на переменную `a` в `main`.

Итак, что происходит в каждом шаге:

1. В `main` начальное значение `*p` равно 1, потому что `p` указывает на `a`, которая равна 1.

2. При вызове `update(p)`, создается новая локальная переменная `b` со значением 2, и `p`
временно указывает на `b`. Однако после завершения `update` никакие изменения не влияют на `a`.

3. После завершения `update` `*p` снова равно 1,
потому что `p` в `main` всё ещё указывает на `a`, и `a` не изменилась.

Таким образом, программа выведет:

```
1
1
```

Поскольку изменения в функции `update` остаются локальными и не влияют на переменную `a` в `main`.